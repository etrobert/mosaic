[
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "_red",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "_green",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "_blue",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "x",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "y",
        "type": "uint8"
      }
    ],
    "name": "engravePixel",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getImage",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bool",
            "name": "isSet",
            "type": "bool"
          },
          {
            "internalType": "uint8",
            "name": "red",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "green",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "blue",
            "type": "uint8"
          }
        ],
        "internalType": "struct Mosaic.Color[50][50]",
        "name": "",
        "type": "tuple[50][50]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "image",
    "outputs": [
      {
        "internalType": "bool",
        "name": "isSet",
        "type": "bool"
      },
      {
        "internalType": "uint8",
        "name": "red",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "green",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "blue",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
